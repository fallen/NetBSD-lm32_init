OUTPUT_FORMAT("elf32-lm32")
ENTRY(_start)

__DYNAMIC = 0;

MEMORY {
	sdram : ORIGIN = 0x10000000, LENGTH = 0x8000000
}

SECTIONS
{
	.text 0x10000000 : AT ( 0x40000000 )
	{
		_ftext = .;
		*(.text .stub .text.* .gnu.linkonce.t.*)
		_etext = .;
	} > sdram

	.rodata ADDR(.text) + SIZEOF(.text) : AT ( LOADADDR(.text) + SIZEOF(.text) )
	{
		. = ALIGN(4);
		_frodata = .;
		*(.rodata .rodata.* .gnu.linkonce.r.*)
		*(.rodata1)
		_erodata = .;
	} > sdram


	/* We shouldn't have a .data section, however the GNU crapchain whines if we don't */
	.data ADDR(.text) + SIZEOF(.text) : AT ( LOADADDR(.text) + SIZEOF(.text) )
	{
		. = ALIGN(4);
		_fdata = .;
		*(.data .data.* .gnu.linkonce.d.*)
		*(.data1)
		_gp = ALIGN(16);
		*(.sdata .sdata.* .gnu.linkonce.s.*)
		_edata = .;
	} > sdram

	.bss ADDR(.data) + SIZEOF(.data) : AT ( LOADADDR(.data) + SIZEOF(.data) )
	{
		. = ALIGN(4);
		_fbss = .;
		*(.dynsbss)
		*(.sbss .sbss.* .gnu.linkonce.sb.*)
		*(.scommon)
		*(.dynbss)
		*(.bss .bss.* .gnu.linkonce.b.*)
		*(COMMON)
		. = ALIGN(4);
		_ebss = .;
		_end = .;
	} > sdram
}

PROVIDE(_phys_fdata = LOADADDR(.data));
PROVIDE(_fstack = ORIGIN(sdram) + LENGTH(sdram) - 4);
